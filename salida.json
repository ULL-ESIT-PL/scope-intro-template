{
  "ast": {
    "type": "Program",
    "body": [
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "$a"
              },
              "operator": "=",
              "right": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 4,
                  "raw": "4"
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2"
                }
              }
            },
            "operator": ",",
            "right": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "$b"
              },
              "operator": "=",
              "right": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 5,
                  "raw": "5"
                },
                "operator": "*",
                "right": {
                  "type": "Identifier",
                  "name": "$a"
                }
              }
            }
          },
          "operator": ",",
          "right": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "$print"
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "$b"
              }
            ]
          }
        }
      }
    ],
    "sourceType": "script"
  },
  "dependencies": {
    "print": true
  }
}
Variable $a used but not declared
Variable $b used but not declared
Variable $print used but not declared
Set(3) { '$a', '$b', '$print' }
